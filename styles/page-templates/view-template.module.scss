@import "@styles/base/_mixins.scss";
@import "@styles/base/_typography.module.scss";
@import "@styles/abstracts/_colors.module.scss";
@import "@styles/abstracts/_variables.scss";


#container {

    @include flex-container(row, nowrap, flex-start, flex-start);
	padding: $nav-bar-height + 20px 7% $nav-bar-height;
	gap: 60px;

	.backButtonContainer {
		@include flex-container(row, nowrap, flex-start, flex-start);

		@mixin make-go-back-button($color) {
			background: rgba($color: $color, $alpha: 0.1);

			svg {
				color: $color
			}

			&:hover {
				background: $color;
				box-shadow: 0px 30px 60px rgba($color: $color, $alpha: 0.4);
				
				svg {
					color: $white;
				}
			}
		}

		a.relance {
			@include make-go-back-button($warning);
		}

		a.panne {
			@include make-go-back-button($error);
		}

		a.systematique {
			@include make-go-back-button($success);
		}
	}

	section {

		@include flex-container(column, nowrap, flex-start, stretch);
		gap: 30px;
		flex: 1;
		height: 100%;

		#itemTitle {

			@include flex-container(column, nowrap, flex-start, flex-start);
			gap: 10px;
			
			h1 {
				@include header-3-semibold;
				color: $primary;
			}
	
			p {
				@include text-md-medium;
				color: $primary-600;
			}

			&.relance {
				h1 {
					color: $warning;
				}
				p {
					color: $warning-600;
				}
			}

			&.panne {
				h1 {
					color: $error;
				}
				p {
					color: $error-600;
				}
			}

			&.systematique {
				h1 {
					color: $success;
				}
				p {
					color: $success-600;
				}
			}

		}

		.contentScrollContainer {
			// make sure it never overflows from the body
            max-height: calc(100vh - calc($nav-bar-height + 280px));
			@include flex-container(column, nowrap, flex-start, stretch);
			gap: 30px;

			.contentContainer {
				@include flex-container(row, nowrap, stretch, stretch);
				gap: 60px;
				width: 100%;
	
	
				.column {
					@include flex-container(column, nowrap, flex-start, stretch);
					gap: 30px;
					width: 100%;
	
					@include reset-list;
	
					li {
						@include flex-container(row, nowrap, space-between, center);
						gap: 15px;
						width: 100%;
						color: $primary;
	
						&.isFullWidth {
							@include flex-container(column, nowrap, flex-start, flex-start);
						
							p {
								width: 100%;
								padding: 20px;
							}
						}
	
						.itemLabel {
							@include flex-container(row, nowrap, flex-start, center);
							gap: 10px;
	
							h5 {
								@include text-sm-regular;
							}
	
							svg {
								width: 1.4rem;
								height: 1.4rem;
							}
						}
	
						ul {
							@include flex-container(row, wrap, flex-start, center);
							@include reset-list;
							column-gap: 30px;
							row-gap: 15px;
	
							li {
								@include button-text;
								padding: 10px 20px;
								border-radius: 30px;
								border: 1px solid $primary-100;
								transition: all 200ms ease-in-out;
	
								&:hover {
									background: $primary-100;
									cursor: pointer;
								}
							}
						}
	
						p {
							@include flex-container(row, nowrap, flex-start, center);
							gap: 10px;
							@include text-sm-regular;
							padding: 10px 20px;
							background: $primary-100;
							border-radius: 5px;
	
							svg, a {
								color: $secondary;
							}
						}
					}
				}
			}

			.fileCardsContainer {
				@include flex-container(column, nowrap, flex-start, stretch);
				gap: 15px;
				padding-bottom: 20px;

				h4 {
					@include header-4-medium;
					color: $primary;
				}

				ul {
					@include reset-list;
					@include flex-container(row, wrap, flex-start, center);
					gap: 30px;
				}

				p.noFilesMessage {
					@include text-md-regular;
					color: $primary-400;
				}
			}
	

		}

	}


}